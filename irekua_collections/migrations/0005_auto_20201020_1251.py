# Generated by Django 3.1.2 on 2020-10-20 17:51
import json
from django.db import migrations, models
import django.db.models.deletion


def move_metadata_schema(apps, schema_editor):
    Schema = apps.get_model('irekua_schemas', 'Schema')
    CollectionType = apps.get_model('irekua_collections', 'CollectionType')

    schemas = {}

    def get_schema_object_from_schema(schema):
        if isinstance(schema, str):
            schema = json.loads(schema)

        title = schema.get('title', None)
        description = schema.get('description', '')

        if title is None:
            return None

        if title in schemas:
            return schemas[title]

        schema_object, _ = Schema.objects.get_or_create(
            name=title,
            defaults={
                'description': description,
                'schema': schema
            }
        )

        schemas[title] = schema_object
        return schema_object

    for collection_type in CollectionType.objects.all():
        schema = collection_type.metadata_schema

        if schema is None:
            continue

        schema_object = get_schema_object_from_schema(schema)
        collection_type.metadata_schema_tmp = schema_object
        collection_type.save()


class Migration(migrations.Migration):

    dependencies = [
        ('irekua_schemas', '0002_auto_20201018_2158'),
        ('irekua_collections', '0004_add_all_collection_type_through_models'),
    ]

    operations = [
        migrations.AddField(
            model_name='collectiontype',
            name='metadata_schema_tmp',
            field=models.ForeignKey(blank=True, db_column='metadata_schema_id', help_text='JSON Schema for collection-specific metadata', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='collectiontype_metadata_schema', to='irekua_schemas.schema', verbose_name='metadata schema'),
        ),
        migrations.RunPython(
            move_metadata_schema,
        ),
        migrations.RemoveField(
            model_name='collectiontype',
            name='metadata_schema',
        ),
        migrations.RenameField(
            model_name='collectiontype',
            old_name='metadata_schema_tmp',
            new_name='metadata_schema',
        ),
    ]
