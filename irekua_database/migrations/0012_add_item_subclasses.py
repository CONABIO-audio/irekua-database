# Generated by Django 3.1 on 2020-10-12 22:04

from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


def get_thumbnail_path(instance, filename):
    path_fmt = os.path.join(
        'thumbnails',
        '{collection}',
        '{sampling_event}',
        '{sampling_event_device}',
        '{hash}{ext}')
    extension = 'jpg'

    sampling_event_device = instance.sampling_event_device
    sampling_event = sampling_event_device.sampling_event
    collection = sampling_event.collection

    hash_string = instance.hash

    path = path_fmt.format(
        collection=collection.pk,
        sampling_event=sampling_event.pk,
        sampling_event_device=sampling_event_device.pk,
        hash=hash_string,
        ext=extension)
    return path


def move_deployment_references_and_thumbnails(apps, schema_editor):
    DeploymentItem = apps.get_model('irekua_database', 'DeploymentItem')
    CollectionItem = apps.get_model('irekua_database', 'CollectionItem')
    SamplingEventItem = apps.get_model('irekua_database', 'SamplingEventItem')
    Item = apps.get_model('irekua_database', 'Item')
    ItemThumbnail = apps.get_model('irekua_database', 'ItemThumbnail')

    for item in Item.objects.all():
        deployment = item.deployment
        sampling_event = deployment.sampling_event
        collection = sampling_event.collection

        collection_item = CollectionItem(
            item_ptr=item,
            collection=collection)
        collection_item.__dict__.update(item.__dict__)
        collection_item.save()

        sampling_event_item = SamplingEventItem(
            collectionitem_ptr=collection_item,
            sampling_event=sampling_event)
        sampling_event_item.__dict__.update(collection_item.__dict__)
        sampling_event_item.save()

        deployment_item = DeploymentItem(
            samplingeventitem_ptr=sampling_event_item,
            deployment_tmp=deployment)
        deployment_item.__dict__.update(sampling_event_item.__dict__)
        deployment_item.save()

        thumbnail = item.item_thumbnail
        if thumbnail:
            item_thumbnail = ItemThumbnail(
                item=item,
                thumbnail=thumbnail)
            item_thumbnail.save()

    assert Item.objects.count() == CollectionItem.objects.count()
    assert CollectionItem.objects.count() == SamplingEventItem.objects.count()
    assert SamplingEventItem.objects.count() == DeploymentItem.objects.count()


class Migration(migrations.Migration):

    dependencies = [
        ('irekua_database', '0011_create_collection_licence'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectionItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='irekua_database.item')),
                ('collection', models.ForeignKey(db_column='collection_id', help_text='Collection to which this item belongs', on_delete=django.db.models.deletion.PROTECT, to='irekua_database.collection', verbose_name='collection')),
            ],
            options={
                'verbose_name': 'Collection Item',
                'verbose_name_plural': 'Collection Items',
            },
            bases=('irekua_database.item',),
        ),
        migrations.CreateModel(
            name='ItemThumbnail',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                ('item', models.OneToOneField(db_column='item_id', help_text='Item whose thumbnail is this.', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='irekua_database.item', verbose_name='item')),
                ('thumbnail', sorl.thumbnail.fields.ImageField(db_column='thumbnail', help_text='Thumbnail associated to item', upload_to=get_thumbnail_path, verbose_name='thumbnail')),
            ],
            options={
                'verbose_name': 'Item Thumbnail',
                'verbose_name_plural': 'Items Thumbnails',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='SamplingEventItem',
            fields=[
                ('collectionitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='irekua_database.collectionitem')),
                ('sampling_event', models.ForeignKey(db_column='sampling_event_id', help_text='Sampling event in which this item was captured', on_delete=django.db.models.deletion.PROTECT, to='irekua_database.samplingevent', verbose_name='sampling event')),
            ],
            options={
                'verbose_name': 'Sampling Event Item',
                'verbose_name_plural': 'Sampling Event Items',
            },
            bases=('irekua_database.collectionitem',),
        ),
        migrations.CreateModel(
            name='DeploymentItem',
            fields=[
                ('samplingeventitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='irekua_database.samplingeventitem')),
                ('deployment_tmp', models.ForeignKey(db_column='deployment_id', help_text='Deployment of device in which this item was captured', on_delete=django.db.models.deletion.PROTECT, to='irekua_database.deployment', verbose_name='deployment')),
            ],
            options={
                'verbose_name': 'Deployment Item',
                'verbose_name_plural': 'Deployment Items',
            },
            bases=('irekua_database.samplingeventitem',),
        ),
        migrations.RunPython(
            move_deployment_references_and_thumbnails,
        ),
    ]
