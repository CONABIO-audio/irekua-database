# Generated by Django 3.1.2 on 2020-10-21 23:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('irekua_items', '0004_include_item_types_models'),
        ('irekua_collections', '0009_relocate_deployment_and_sampling_event_types'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AlterField(
                    model_name='collectiontype',
                    name='annotation_types',
                    field=models.ManyToManyField(blank=True, help_text='Types of annotations valid for collections of type', through='irekua_collections.CollectionTypeAnnotationType', to='irekua_items.AnnotationType', verbose_name='annotation types'),
                ),
                migrations.AlterField(
                    model_name='collectiontype',
                    name='event_types',
                    field=models.ManyToManyField(blank=True, help_text='Types of events valid for collections of type', through='irekua_collections.CollectionTypeEventType', to='irekua_items.EventType', verbose_name='event types'),
                ),
                migrations.AlterField(
                    model_name='collectiontype',
                    name='item_types',
                    field=models.ManyToManyField(blank=True, help_text='Types of items valid for collections of type', through='irekua_collections.CollectionTypeItemType', to='irekua_items.ItemType', verbose_name='item types'),
                ),
                migrations.AlterField(
                    model_name='collectiontype',
                    name='licence_types',
                    field=models.ManyToManyField(blank=True, help_text='Types of licences valid for collections of type', through='irekua_collections.CollectionTypeLicenceType', to='irekua_items.LicenceType', verbose_name='licence types'),
                ),
                migrations.AlterField(
                    model_name='collectiontypeannotationtype',
                    name='annotation_type',
                    field=models.ForeignKey(db_column='annotation_type_id', help_text='Annotation type to be admissible in collections of this type', on_delete=django.db.models.deletion.PROTECT, to='irekua_items.annotationtype', verbose_name='annotation type'),
                ),
                migrations.AlterField(
                    model_name='collectiontypeeventtype',
                    name='event_type',
                    field=models.ForeignKey(db_column='event_type_id', help_text='Event type to be admissible in collections of this type', on_delete=django.db.models.deletion.PROTECT, to='irekua_items.eventtype', verbose_name='event type'),
                ),
                migrations.AlterField(
                    model_name='collectiontypeitemtype',
                    name='item_type',
                    field=models.ForeignKey(db_column='item_type_id', help_text='Item to be part of collection', on_delete=django.db.models.deletion.PROTECT, to='irekua_items.itemtype', verbose_name='item type'),
                ),
                migrations.AlterField(
                    model_name='collectiontypelicencetype',
                    name='licence_type',
                    field=models.ForeignKey(db_column='licence_type_id', help_text='Licence type to be admissible in collections of this type', on_delete=django.db.models.deletion.PROTECT, to='irekua_items.licencetype', verbose_name='licence type'),
                ),
                migrations.AlterField(
                    model_name='deploymenttype',
                    name='item_types',
                    field=models.ManyToManyField(blank=True, help_text='Valid item types for this deployment type', to='irekua_items.ItemType', verbose_name='item types'),
                ),
                migrations.AlterField(
                    model_name='samplingeventtype',
                    name='item_types',
                    field=models.ManyToManyField(blank=True, help_text='Valid item types for this sampling event type', to='irekua_items.ItemType', verbose_name='item types'),
                ),
            ],
            database_operations=[],
        ),
    ]
