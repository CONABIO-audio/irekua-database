# Generated by Django 3.1 on 2020-10-12 00:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import irekua_database.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # ('irekua_database', '0008_move_terms'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='TermType',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('name', models.CharField(db_column='name', help_text='Name for term type', max_length=128, unique=True, verbose_name='name')),
                        ('description', models.TextField(db_column='description', help_text='Description of term type', verbose_name='description')),
                        ('icon', models.ImageField(blank=True, db_column='icon', help_text='Term type icon', null=True, upload_to='images/term_types/', verbose_name='icon')),
                        ('is_categorical', models.BooleanField(db_column='is_categorical', help_text='Flag indicating whether the term type represents a categorical variable', verbose_name='is categorical')),
                        ('metadata_schema', models.JSONField(blank=True, db_column='metadata_schema', default=irekua_database.utils.simple_JSON_schema, help_text='JSON Schema for metadata of term info', validators=[irekua_database.utils.validate_JSON_schema], verbose_name='metadata schema')),
                        ('synonym_metadata_schema', models.JSONField(blank=True, db_column='synonym_metadata_schema', default=irekua_database.utils.simple_JSON_schema, help_text='JSON Schema for metadata of synonym info', validators=[irekua_database.utils.validate_JSON_schema], verbose_name='synonym metadata schema')),
                    ],
                    options={
                        'verbose_name': 'Term Type',
                        'verbose_name_plural': 'Term Types',
                        'ordering': ['name'],
                    },
                ),
                migrations.CreateModel(
                    name='TermSuggestion',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('value', models.CharField(db_column='value', help_text='Value of term', max_length=128, verbose_name='value')),
                        ('description', models.TextField(blank=True, db_column='description', help_text='Description of term', verbose_name='description')),
                        ('metadata', models.JSONField(blank=True, db_column='metadata', default=irekua_database.utils.empty_JSON, help_text='Metadata associated to term', null=True, verbose_name='metadata')),
                        ('created_by', models.ForeignKey(blank=True, db_column='creator_id', help_text='Creator of object', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='termsuggestion_created_by', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                        ('modified_by', models.ForeignKey(blank=True, db_column='modified_by', editable=False, help_text='User who made modifications last', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='termsuggestion_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
                        ('term_type', models.ForeignKey(db_column='term_type', help_text='Type of term', on_delete=django.db.models.deletion.CASCADE, to='irekua_terms.termtype', verbose_name='term type')),
                    ],
                    options={
                        'verbose_name': 'Term Suggestions',
                        'ordering': ['-created_on'],
                    },
                ),
                migrations.CreateModel(
                    name='Term',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('value', models.CharField(db_column='value', help_text='Value of term', max_length=128, verbose_name='value')),
                        ('scope', models.CharField(blank=True, db_column='scope', help_text='Scope of term. Use for disambiguation.', max_length=128, verbose_name='scope')),
                        ('description', models.TextField(blank=True, db_column='description', help_text='Description of term', verbose_name='description')),
                        ('url', models.URLField(blank=True, db_column='url', help_text='URL for term description', verbose_name='term url')),
                        ('metadata', models.JSONField(blank=True, db_column='metadata', default=irekua_database.utils.empty_JSON, help_text='Metadata associated to term', null=True, verbose_name='metadata')),
                        ('term_type', models.ForeignKey(db_column='term_type', help_text='Type of term', limit_choices_to={'is_categorical': True}, on_delete=django.db.models.deletion.CASCADE, to='irekua_terms.termtype', verbose_name='term type')),
                    ],
                    options={
                        'verbose_name': 'Term',
                        'verbose_name_plural': 'Terms',
                        'ordering': ['term_type', 'value'],
                        'unique_together': {('term_type', 'value', 'scope')},
                    },
                ),
                migrations.CreateModel(
                    name='SynonymSuggestion',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('synonym', models.CharField(db_column='synonym', help_text='Suggestion of synonym', max_length=128, verbose_name='synonym')),
                        ('description', models.TextField(blank=True, db_column='description', help_text='Description of synonym', verbose_name='description')),
                        ('metadata', models.JSONField(blank=True, db_column='metadata', default=irekua_database.utils.empty_JSON, help_text='Metadata associated to synonym', null=True, verbose_name='metadata')),
                        ('created_by', models.ForeignKey(blank=True, db_column='creator_id', help_text='Creator of object', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='synonymsuggestion_created_by', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                        ('modified_by', models.ForeignKey(blank=True, db_column='modified_by', editable=False, help_text='User who made modifications last', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='synonymsuggestion_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
                        ('source', models.ForeignKey(db_column='source_id', on_delete=django.db.models.deletion.CASCADE, to='irekua_terms.term', verbose_name='')),
                    ],
                    options={
                        'verbose_name': 'Synonym Suggestions',
                        'ordering': ['-created_on'],
                    },
                ),
                migrations.CreateModel(
                    name='Synonym',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('metadata', models.JSONField(blank=True, db_column='metadata', default=irekua_database.utils.empty_JSON, help_text='Metadata associated to the synonym', null=True, verbose_name='metadata')),
                        ('source', models.ForeignKey(db_column='source_id', help_text='Reference to the source of synonym', on_delete=django.db.models.deletion.CASCADE, related_name='synonym_source', to='irekua_terms.term', verbose_name='source')),
                        ('target', models.ForeignKey(db_column='target_id', help_text='Reference to the target of the synonym', on_delete=django.db.models.deletion.CASCADE, related_name='synonym_target', to='irekua_terms.term', verbose_name='target')),
                    ],
                    options={
                        'verbose_name': 'Synonym',
                        'verbose_name_plural': 'Synonyms',
                        'ordering': ['source'],
                    },
                ),
                migrations.CreateModel(
                    name='Entailment',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('metadata', models.JSONField(blank=True, db_column='metadata', help_text='Metadata associated to entailment', null=True, verbose_name='metadata')),
                        ('source', models.ForeignKey(db_column='source_id', help_text='Source of entailment', on_delete=django.db.models.deletion.CASCADE, related_name='entailment_source', to='irekua_terms.term', verbose_name='source')),
                        ('target', models.ForeignKey(db_column='target_id', help_text='Target of entailment', on_delete=django.db.models.deletion.CASCADE, related_name='entailment_target', to='irekua_terms.term', verbose_name='target')),
                    ],
                    options={
                        'verbose_name': 'Entailment',
                        'verbose_name_plural': 'Entailments',
                        'ordering': ['source'],
                    },
                ),
                migrations.CreateModel(
                    name='EntailmentType',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('metadata_schema', models.JSONField(blank=True, db_column='metadata_schema', default=irekua_database.utils.simple_JSON_schema, help_text='JSON Schema for metadata of entailment info', validators=[irekua_database.utils.validate_JSON_schema], verbose_name='metadata schema')),
                        ('source_type', models.ForeignKey(db_column='source_type_id', help_text='Term type of source of entailment', on_delete=django.db.models.deletion.CASCADE, related_name='entailment_source_type', to='irekua_terms.termtype', verbose_name='source type')),
                        ('target_type', models.ForeignKey(db_column='target_type_id', help_text='Term type of target of entailment', on_delete=django.db.models.deletion.CASCADE, related_name='entailment_target_type', to='irekua_terms.termtype', verbose_name='target type')),
                    ],
                    options={
                        'verbose_name': 'Entailment Type',
                        'verbose_name_plural': 'Entailment Types',
                        'ordering': ['source_type'],
                        'unique_together': {('source_type', 'target_type')},
                    },
                ),
            ],
            database_operations=[],
        ),
    ]
