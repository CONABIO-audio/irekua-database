# Generated by Django 3.1.2 on 2020-10-21 21:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('irekua_schemas', '0002_auto_20201018_2158'),
        ('irekua_types', '0005_auto_20201019_1402'),
        ('irekua_collections', '0008_rename_metadata_to_collection_metadata'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='DeploymentType',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('name', models.CharField(db_column='name', help_text='Name of deployment type', max_length=128, unique=True, verbose_name='name')),
                        ('description', models.TextField(blank=True, db_column='description', help_text='Description of deployment type', verbose_name='description')),
                        ('icon', models.ImageField(blank=True, db_column='icon', help_text='Icon for deployment type', null=True, upload_to='images/deployment_types/', verbose_name='icon')),
                        ('restrict_item_types', models.BooleanField(db_column='restrict_item_types', default=False, help_text='Flag indicating whether to restrict item types apt for this deployment type', verbose_name='restrict item types')),
                        ('device_type', models.ForeignKey(db_column='device_type_id', help_text='Type of device that can be used in the deployment of the given type', on_delete=django.db.models.deletion.PROTECT, to='irekua_types.devicetype', verbose_name='device type')),
                        ('item_types', models.ManyToManyField(blank=True, help_text='Valid item types for this deployment type', to='irekua_types.ItemType', verbose_name='item types')),
                        ('metadata_schema', models.ForeignKey(blank=True, db_column='metadata_schema_id', help_text='JSON Schema for additional metadata', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deploymenttype_metadata_schema', to='irekua_schemas.schema', verbose_name='metadata schema')),
                    ],
                    options={
                        'verbose_name': 'Deployment Type',
                        'verbose_name_plural': 'Deployment Types',
                        'ordering': ['-created_on'],
                    },
                ),
                migrations.CreateModel(
                    name='SamplingEventType',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', help_text='Date of creation', verbose_name='created on')),
                        ('modified_on', models.DateTimeField(auto_now=True, db_column='modified_on', help_text='Date of last modification', verbose_name='modified on')),
                        ('name', models.CharField(db_column='name', help_text='Name fo sampling event type', max_length=128, unique=True, verbose_name='name')),
                        ('description', models.TextField(blank=True, db_column='description', help_text='Description of sampling event type', verbose_name='description')),
                        ('icon', models.ImageField(blank=True, db_column='icon', help_text='Icon for sampling event type', null=True, upload_to='images/sampling_event_types/', verbose_name='icon')),
                        ('restrict_deployment_types', models.BooleanField(db_column='restrict_deployment_types', default=False, help_text='Flag indicating whether to restrict deployment types associated with this sampling event type', verbose_name='restrict deployment types')),
                        ('restrict_site_types', models.BooleanField(db_column='restrict_site_types', default=False, help_text='Flag indicating whether to restrict site types associated with this sampling event type', verbose_name='restrict site types')),
                        ('restrict_item_types', models.BooleanField(db_column='restrict_item_types', default=False, help_text='Flag indicating whether to restrict item types apt for this sampling event type', verbose_name='restrict item types')),
                        ('deployment_types', models.ManyToManyField(blank=True, help_text='Valid deployment types for this sampling event type', to='irekua_collections.DeploymentType', verbose_name='deployment types')),
                        ('item_types', models.ManyToManyField(blank=True, help_text='Valid item types for this sampling event type', to='irekua_types.ItemType', verbose_name='item types')),
                        ('metadata_schema', models.ForeignKey(blank=True, db_column='metadata_schema_id', help_text='JSON Schema for additional metadata', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='samplingeventtype_metadata_schema', to='irekua_schemas.schema', verbose_name='metadata schema')),
                        ('site_types', models.ManyToManyField(blank=True, help_text='Valid site types for this sampling event type', to='irekua_types.SiteType', verbose_name='site types')),
                    ],
                    options={
                        'verbose_name': 'Sampling Event Type',
                        'verbose_name_plural': 'Sampling Event Types',
                        'ordering': ['name'],
                    },
                ),
                migrations.AlterField(
                    model_name='collectiontype',
                    name='deployment_types',
                    field=models.ManyToManyField(blank=True, help_text='Types of deployments valid for collections of type', through='irekua_collections.CollectionTypeDeploymentType', to='irekua_collections.DeploymentType', verbose_name='device types'),
                ),
                migrations.AlterField(
                    model_name='collectiontype',
                    name='sampling_event_types',
                    field=models.ManyToManyField(blank=True, help_text='Types of sampling events valid for collections of type', through='irekua_collections.CollectionTypeSamplingEventType', to='irekua_collections.SamplingEventType', verbose_name='sampling event types'),
                ),
                migrations.AlterField(
                    model_name='collectiontypedeploymenttype',
                    name='deployment_type',
                    field=models.ForeignKey(db_column='deployment_type_id', help_text='Deployment type to be admissible in collections of this type', on_delete=django.db.models.deletion.PROTECT, to='irekua_collections.deploymenttype', verbose_name='deployment type'),
                ),
                migrations.AlterField(
                    model_name='collectiontypesamplingeventtype',
                    name='sampling_event_type',
                    field=models.ForeignKey(db_column='sampling_event_type_id', help_text='Sampling Event type to be admissible in collections of this type', on_delete=django.db.models.deletion.PROTECT, to='irekua_collections.samplingeventtype', verbose_name='sampling event type'),
                ),
                migrations.AlterField(
                    model_name='deployment',
                    name='deployment_type',
                    field=models.ForeignKey(db_column='deployment_type_id', help_text='Type of deployment', on_delete=django.db.models.deletion.PROTECT, to='irekua_collections.deploymenttype', verbose_name='deployment type'),
                ),
                migrations.AlterField(
                    model_name='samplingevent',
                    name='sampling_event_type',
                    field=models.ForeignKey(db_column='sampling_event_type', help_text='Type of sampling event', on_delete=django.db.models.deletion.PROTECT, to='irekua_collections.samplingeventtype', verbose_name='sampling event type'),
                ),
            ],
            database_operations=[],
        ),
    ]
